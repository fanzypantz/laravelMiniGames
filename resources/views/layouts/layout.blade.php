<!doctype html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- CSRF Token -->
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>Minigames @yield('title')</title>

        <!-- Scripts -->
        <script src="{{ asset('js/app.js') }}" defer></script>
        @yield('script')

        <!-- Fonts -->
        <link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

        <!-- Styles -->
        <link href="{{ asset('css/app.css') }}" rel="stylesheet">
        @yield('css')
    </head>
    <body>
        <img id="menu-button" class="menu-button" src="{{ asset('/images/icons/menu.svg') }}" alt="" onclick="layoutModule.toggleMenu()">

        <nav id="nav">
            <a class="nav-item btn" href="{{ route('index') }}">Home</a>
            @if(Route::current()->getName() == 'lobby')
                <a class="nav-item btn" onclick="layoutModule.copyURL()" >Copy Lobby URL</a>
                <a class="nav-item btn" onclick="layoutModule.stopGame()">Close Game</a>
            @endif
            @guest
                <a class="nav-item btn" href="{{ route('register') }}">

                    <strong>Sign up</strong>
                </a>
                <a class="nav-item btn" href="{{ route('login') }}">Log in</a>
            @else
                <a class="nav-item btn" href="" >{{ Auth::user()->name }}</a>
                <a class="nav-item btn" href="{{ route('logout') }}">{{ __('Logout') }}</a>
            @endguest
        </nav>

        <div id="app">
            @yield('content')
        </div>

        <div id="url-holder"></div>

        <div id="bg" class="area" >
            <ul class="circles">
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
            </ul>
        </div >
        <script>
            let bgAnimationModule = (function() {
                let bg = document.querySelector('#bg');
                let bgAnimRequest = undefined;
                let rotation = 0;
                let rotationSpeed = 0.1;
                let rotateUp = true;
                let colors = [
                    [36, 92, 155],
                    [194, 232, 42],
                    [168, 67, 56],
                    [165, 19, 186],
                    [8, 82, 61],
                    [235, 176, 12],
                    [0, 158, 112],
                ];

                let colorA = 1;
                let colorB = 2;
                let a = colors[0];
                let b = colors[2];

                function mapRange(from, to, s) {
                    // mapRange expects ranges generated by _.range
                    let a1 = from[0];
                    let a2 = from[from.length - 1];
                    let b1 = to[0];
                    let b2 = to[to.length - 1];
                    return b1 + (s - a1) * (b2 - b1) / (a2 - a1);
                }

                function getRandomInt(min, max) {
                    min = Math.ceil(min);
                    max = Math.floor(max);
                    return Math.floor(Math.random() * (max - min + 1)) + min;
                }

                function animate() {
                    bgAnimRequest = undefined;
                    // Iterate the rotation
                    if (rotateUp) {
                        rotation += rotationSpeed;
                    } else {
                        rotation -= rotationSpeed;
                    }
                    if (rotation > 360) {
                        rotation = 0;
                        // colorB = getRandomInt(1,6);
                        // rotateUp = false;
                    } else if (rotation < 0) {
                        // rotateUp = true;
                    }
                    // b = [
                    //     mapRange([0, 360], [colors[colorB][0], colors[colorA][0]], rotation),
                    //     mapRange([0, 360], [colors[colorB][1], colors[colorA][1]], rotation),
                    //     mapRange([0, 360], [colors[colorB][2], colors[colorA][2]], rotation),
                    // ];
                    // bg.style.background = `linear-gradient(${rotation}deg, rgb(${a[0]}, ${a[1]}, ${a[2]}), rgb(${b[0]}, ${b[1]}, ${b[2]}))`;
                    bg.style.background = `linear-gradient(${rotation}deg, #c2e82a, #a84338, #245C9B, #85420C)`;
                    bg.style.backgroundSize = '200% 200%';


                    startAnimation();
                }

                function startAnimation() {
                    if (!bgAnimRequest) {
                        bgAnimRequest = window.requestAnimationFrame(animate);
                    }
                }

                function stopAnimation() {
                    if (bgAnimRequest) {
                        window.cancelAnimationFrame(bgAnimRequest);
                        bgAnimRequest = undefined;
                    }
                }

                return {
                    startAnimation: startAnimation,
                    stopAnimation: stopAnimation,
                }
            })();

            let layoutModule = (function () {

                window.addEventListener('resize', function(event){
                    if (window.innerWidth > 766) {
                        let button = document.querySelector('#menu-button');
                        let nav = document.querySelector('#nav');
                        button.style.opacity = '0';
                        button.style.display = 'none';
                        nav.style.opacity = '1';
                        nav.style.display = 'flex';
                    } else {
                        let button = document.querySelector('#menu-button');
                        let nav = document.querySelector('#nav');
                        button.style.opacity = '1';
                        button.style.display = 'block';
                        nav.style.opacity = '0';
                        nav.style.display = 'none';
                    }
                });

                function copyURL() {
                    let element = document.createElement('textarea');
                    element.value = window.location.href;
                    // Make element readonly
                    element.setAttribute('readonly', '');
                    // Hide the element
                    element.style = {
                        display: "none",
                        position: "absolute",
                        top: "-500px",
                    };
                    document.body.appendChild(element);
                    element.select();
                    document.execCommand('copy');
                    document.body.removeChild(element);
                }

                function toggleMenu () {
                    let button = document.querySelector('#menu-button');
                    let nav = document.querySelector('#nav');
                    if (button.classList.contains('open')) {
                        nav.style.opacity = '0';
                        setTimeout(() => {
                            nav.style.display = 'flex';
                            button.classList.remove('open');
                        }, 250);
                    } else {
                        nav.style.display = 'flex';
                        nav.style.opacity = '1';
                        setTimeout(() => {
                            button.classList.add('open');
                        }, 250)
                    }
                }

                function stopGame() {
                    let lobbyId = window.location.pathname.split("/").pop();
                    window.axios.post(`/game/stopGame/${lobbyId}`);
                    return false;
                }

                return {
                    copyURL: copyURL,
                    toggleMenu: toggleMenu,
                    stopGame: stopGame,
                }
            })();

            bgAnimationModule.startAnimation();

        </script>
    </body>
</html>

