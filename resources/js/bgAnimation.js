let bgAnimationModule = (function() {
    let bg = document.querySelector('#bg');
    let bgAnimRequest = undefined;
    let rotation = 0;
    let rotationSpeed = 0.1;
    let rotateUp = true;
    let colors = [
        [36, 92, 155],
        [194, 232, 42],
        [168, 67, 56],
        [165, 19, 186],
        [8, 82, 61],
        [235, 176, 12],
        [0, 158, 112],
    ];

    let colorA = 1;
    let colorB = 2;
    let a = colors[0];
    let b = colors[2];

    function mapRange(from, to, s) {
        // mapRange expects ranges generated by _.range
        let a1 = from[0];
        let a2 = from[from.length - 1];
        let b1 = to[0];
        let b2 = to[to.length - 1];
        return b1 + (s - a1) * (b2 - b1) / (a2 - a1);
    }

    function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function animate() {
        bgAnimRequest = undefined;
        // Iterate the rotation
        if (rotateUp) {
            rotation += rotationSpeed;
        } else {
            rotation -= rotationSpeed;
        }
        if (rotation > 360) {
            rotation = 0;
            // colorB = getRandomInt(1,6);
            // rotateUp = false;
        } else if (rotation < 0) {
            // rotateUp = true;
        }
        // b = [
        //     mapRange([0, 360], [colors[colorB][0], colors[colorA][0]], rotation),
        //     mapRange([0, 360], [colors[colorB][1], colors[colorA][1]], rotation),
        //     mapRange([0, 360], [colors[colorB][2], colors[colorA][2]], rotation),
        // ];
        // bg.style.background = `linear-gradient(${rotation}deg, rgb(${a[0]}, ${a[1]}, ${a[2]}), rgb(${b[0]}, ${b[1]}, ${b[2]}))`;
        bg.style.background = `linear-gradient(${rotation}deg, #c2e82a, #a84338, #245C9B, #85420C)`;
        bg.style.backgroundSize = '200% 200%';


        startAnimation();
    }

    function startAnimation() {
        if (!bgAnimRequest) {
            bgAnimRequest = window.requestAnimationFrame(animate);
        }
    }

    function stopAnimation() {
        if (bgAnimRequest) {
            window.cancelAnimationFrame(bgAnimRequest);
            bgAnimRequest = undefined;
        }
    }

    return {
        startAnimation: startAnimation,
        stopAnimation: stopAnimation,
    }
})();

export default bgAnimationModule;
